{{- if (eq (include "eric-data-document-database-pg.load-legecy-template-enabled" .) "true") }}
{{- if or .Release.IsUpgrade .Release.IsInstall }}
{{- $globalValue := fromJson (include "eric-data-document-database-pg.global" .) -}}
{{- $logshipperValues := fromJson (include "eric-data-document-database-pg.ls-values" .) -}}
{{- $logshipperCopied := deepCopy . -}}
{{- $logshipperMerged := (mergeOverwrite $logshipperCopied $logshipperValues) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-data-document-database-pg.name" . }}-backup-pgdata
  labels: {{- include "eric-data-document-database-pg.labels.extended-defaults" . | nindent 4 }}
  annotations:
    {{- $helmHooks := dict -}}
    {{- $_ := set $helmHooks "helm.sh/hook" "pre-rollback" -}}
    {{- $_ := set $helmHooks "helm.sh/hook-delete-policy" "hook-succeeded,before-hook-creation" -}}
    {{- $_ := set $helmHooks "helm.sh/hook-weight" "-2" -}}
    {{- $commonAnn := fromYaml (include "eric-data-document-database-pg.annotations" .) -}}
    {{- include "eric-data-document-database-pg.mergeAnnotations" (dict "location" .Template.Name "sources" (list $commonAnn $helmHooks)) | trim | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- $podTempLabels := dict -}}
        {{- $_ := set $podTempLabels "sidecar.istio.io/inject" "false" -}}
        {{- $_ := set $podTempLabels "app" (printf "%s-%s" (include "eric-data-document-database-pg.name" .) "backup-pgdata") -}}
        {{- $commonLabels := fromYaml (include "eric-data-document-database-pg.labels" .) -}}
        {{- $networkpllabels := fromYaml (include "eric-data-document-database-pg.networkpolicyp2.labels" .) -}}
        {{- include "eric-data-document-database-pg.mergeLabels" (dict "location" .Template.Name "sources" (list $podTempLabels $commonLabels $networkpllabels)) | trim | nindent 8 }}
      annotations:
        {{- $podTempAnn := dict -}}
        {{- if .Values.bandwidth.cleanuphook.maxEgressRate }}
          {{- $_ := set $podTempAnn "kubernetes.io/egress-bandwidth" (.Values.bandwidth.cleanuphook.maxEgressRate | toString) -}}
        {{- end }}
        {{- $commonAnn := fromYaml (include "eric-data-document-database-pg.annotations" .) -}}
        {{- $appArmorAnn := include "eric-data-document-database-pg.appArmorProfile" (dict "root" . "Scope" "Hook" "containerList" (list "backup-pgdata")) | fromYaml -}}
        {{- include "eric-data-document-database-pg.mergeAnnotations" (dict "location" .Template.Name "sources" (list $podTempAnn $appArmorAnn $commonAnn)) | trim | nindent 8 }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "eric-data-document-database-pg.name" . }}-pgdata-hook
      {{- if include "eric-data-document-database-pg.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-data-document-database-pg.pullSecrets" . }}
      {{- end }}
      securityContext:
        {{- if not (and (empty $globalValue.fsGroup.manual) (eq "false" (toString $globalValue.fsGroup.namespace))) }}
        fsGroup: {{ template "eric-data-document-database-pg.fsGroup.coordinated" . }}
          {{- if semverCompare ">=1.23.0-0" .Capabilities.KubeVersion.Version }}
        fsGroupChangePolicy: "OnRootMismatch"
          {{- end }}
        {{- end }}
        {{- if include "eric-data-document-database-pg.podSecurityContext.supplementalGroups" . -}}
{{- include "eric-data-document-database-pg.podSecurityContext.supplementalGroups" . | nindent 8 }}
        {{- end }}
{{- include "eric-data-document-database-pg.seccompProfile" (dict "Values" .Values "Scope" "Pod") | nindent 8 }}
      {{- if or (not (empty .Values.nodeSelector.cleanuphook)) (not (eq "{}" (include "eric-data-document-database-pg.global.nodeSelector" .))) }}
      nodeSelector:
{{- include "eric-data-document-database-pg.nodeSelector.cleanuphook" . | nindent 8 }}
      {{- end }}
      tolerations:
{{ include "eric-data-document-database-pg.merge-tolerations" (dict "root" . "podbasename" "cleanuphook") | nindent 8}}
      {{- if .Values.podPriority.cleanuphook.priorityClassName }}
      priorityClassName: {{ .Values.podPriority.cleanuphook.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: backup-pgdata
          image: {{ template "eric-data-document-database-pg.kubeclientImagePath" . }}
          imagePullPolicy: {{ include "eric-data-document-database-pg.imagePullPolicy" . | quote }}
          env:
          - name: STATEFULSET_NAME
            value: {{ template "eric-data-document-database-pg.name" . }}
          - name: REPLICA_COUNT
            value: {{ .Values.highAvailability.replicaCount | quote }}
          - name: LOG_SCHEMA
            value: {{ template "eric-data-document-database-pg.logSchema" . }}
          - name: CLUSTER_NAME
            value: {{ template "eric-data-document-database-pg.name" . }}
          - name: RELEASE_NAME
            value: {{ .Release.Name | quote }}
          - name: KUBERNETES_NAMESPACE
            valueFrom: { fieldRef: { fieldPath: metadata.namespace } }
          - name: TRANSIT_COMPONENT
            value: {{ template "eric-data-document-database-pg.name" . }}-transit-pvc
          - name: TARGET_PG_VERSION
            value: "13"
          - name: PHASE
            value: "rollback"
          - name: TZ
            value: {{ $globalValue.timezone | quote }}
          - name: BR_LOG_LEVEL
            value: {{ .Values.brAgent.logLevel }}
          - name: MONITOR_LOG_LEVEL
            value: {{ .Values.patroni.logLevel }}
          - name: PG_CLIENT_TLS_CERT_PATH
            value: /run/secrets/{{ template "eric-data-document-database-pg.secretBaseName" . }}-postgres-cert
          {{- if (eq (include "eric-data-document-database-pg.global-security-tls-enabled" .) "false") }}
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ required "Require .Values.credentials.kubernetesSecretName " .Values.credentials.kubernetesSecretName | quote }}
                key: {{ .Values.credentials.keyForSuperPw | quote }}
          {{- else if eq .Values.service.endpoints.postgres.tls.enforced "optional" }}
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ required "Require .Values.credentials.kubernetesSecretName " .Values.credentials.kubernetesSecretName | quote }}
                key: {{ .Values.credentials.keyForSuperPw | quote }}
          {{- else }}
          - name: PGPASSWORD
            value: "fakepgpass"
          {{- end }}
          - name: ENABLE_SIPTLS
            {{- if (not (eq (include "eric-data-document-database-pg.global-security-tls-enabled" .) "false")) }}
            value: "true"
            {{- else }}
            value: "false"
            {{- end }}
          - name: CONTAINER_NAME
            value: {{ template "eric-data-document-database-pg.name" . }}-hook
          - name: LOG_REDIRECT
            value: {{ template "eric-data-document-database-pg.logRedirect" . }}
          command:
            - /bin/bash
            - -c
          args:
            - "
              /usr/bin/catatonit -- 
              {{ template "eric-data-document-database-pg.stdRedirectCMD" .  }}
              {{ template "eric-data-document-database-pg.hook.scriptPath" . }}/backuppgdata.sh; RES=$?; sleep 3; exit ${RES}"
          securityContext:
            {{- include "eric-data-document-database-pg.seccompProfile" (dict "Values" .Values "Scope" "backup-pgdata") | nindent 12 }}
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
          {{- if (eq (include "eric-data-document-database-pg.hooklog" .) "true") }}
            {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" $logshipperMerged | indent 12 }}
          {{- end }}
            - name: pgdata-volume
              mountPath: "/var/pgdata"
            - name: tmp
              mountPath: /tmp
          {{- if  (not (eq (include "eric-data-document-database-pg.global-security-tls-enabled" .) "false")) }}
            - name: postgres-client-certificates
              mountPath: /run/secrets/{{ template "eric-data-document-database-pg.secretBaseName" . }}-postgres-cert/
          {{- end }}
          resources:
            requests:
            {{- if .Values.resources.kube_client.requests.cpu }}
              cpu: {{ .Values.resources.kube_client.requests.cpu  | quote }}
            {{- end }}
            {{- if .Values.resources.kube_client.requests.memory }}
              memory: {{ .Values.resources.kube_client.requests.memory  | quote }}
            {{- end }}
            {{- if index .Values.resources.kube_client.requests "ephemeral-storage" }}
              ephemeral-storage: {{ index .Values.resources.kube_client.requests "ephemeral-storage" | quote }}
            {{- end }}
            limits:
            {{- if .Values.resources.kube_client.limits.cpu }}
              cpu: {{ .Values.resources.kube_client.limits.cpu  | quote }}
            {{- end }}
            {{- if .Values.resources.kube_client.limits.memory }}
              memory: {{ .Values.resources.kube_client.limits.memory  | quote }}
            {{- end }}
            {{- if index .Values.resources.kube_client.limits "ephemeral-storage" }}
              ephemeral-storage: {{ index .Values.resources.kube_client.limits "ephemeral-storage" | quote }}
            {{- end }}
      {{- if (eq (include "eric-data-document-database-pg.hooklog" .) "true") }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-container-for-hooks" $logshipperMerged | indent 8 }}
      {{- end }}
      volumes:
      {{- if (eq (include "eric-data-document-database-pg.hooklog" .) "true") }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-volumes-for-hooks" $logshipperMerged | indent 6 }}
      {{- end }}
      - name: pgdata-volume
        persistentVolumeClaim:
          claimName: {{ template "eric-data-document-database-pg.name" . }}-backup-pgdata
      {{- if  (not (eq (include "eric-data-document-database-pg.global-security-tls-enabled" .) "false")) }}
      - name: postgres-client-certificates
        secret:
          secretName: {{ template "eric-data-document-database-pg.secretBaseName" . }}-postgres-cert
          defaultMode: 0640
          optional: true
      {{- end }}
      - name: tmp
        emptyDir: {}
#  volumeClaimTemplates:
#    - metadata:
#        name: backup-pgdata
#        labels:
#          app: {{ template "eric-data-document-database-pg.name" . }}
#          release: {{ .Release.Name | quote }}
#          cluster-name: {{ template "eric-data-document-database-pg.name" . }}
#          ## workaround after migrate from helm2 to helm3. Avoid upgrade fail. ADPPRG-26626
#          heritage: Tiller
#      spec:
#        accessModes:
#          - ReadWriteOnce
#        resources:
#            requests:
#              storage: {{ template "eric-data-document-database-pg.persistentVolumeClaim.size" . }}
#        storageClassName: {{ template "eric-data-document-database-pg.persistentVolumeClaim.defaultStorageClassName" . }}
{{- end -}}
{{- end }}
